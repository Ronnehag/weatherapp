{"version":3,"sources":["components/SearchForm.js","components/WeatherCard.js","components/Layout/LoadingBar.js","components/Weather.js","components/Layout/Navbar.js","components/WeatherDetailsItem.js","components/WeatherDetails.js","App.js","index.js"],"names":["SearchForm","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","initialState","handleChange","e","setState","defineProperty","target","name","value","asyncToGenerator","regenerator_default","a","mark","_callee","options","node","data","key","element","wrap","_context","prev","next","country","abrupt","document","querySelector","fetchSuggestions","process","sent","hasOwnProperty","M","Autocomplete","init","stop","_ref2","_callee2","url","res","json","_context2","fetch","t0","console","log","err","_x","validateInput","input","trim","toLowerCase","replace","handleSubmit","preventDefault","searchName","props","searchForWeatherByName","inherits","createClass","react_default","createElement","className","autoComplete","type","onChange","htmlFor","onClick","Component","WeatherCard","_ref","icon","text","updated","tempC","addToFav","src","alt","style","position","title","LoadingBar","Weather","addToLocalStorage","loadWeatherData","weatherData","_this$state$weatherDa","location","_this$state$weatherDa2","current","last_updated","temp_c","temp_f","is_day","_this$state$weatherDa3","condition","tempF","details","showDetails","isday","getLocation","cb","navigator","geolocation","getCurrentPosition","prevprops","_componentDidMount","_this2","_position$coords","longitude","latitude","coords","search","Navbar","favoriteList","favoriteLocations","map","id","remove","nameSpan","AutoInit","background","href","marginLeft","data-target","fontSize","marginRight","padding","display","WeatherDetailsItem","wind","date","mintemp","maxtemp","description","maxwind","epoch","avgtemp","weatherCard","margin","d","Date","setUTCSeconds","getDay","Math","round","minHeight","WeatherDetails","forecastList","forecast","date_epoch","_forecast$day","day","maxtemp_c","mintemp_c","maxwind_kph","avgtemp_c","_forecast$day$conditi","App","removeFromLocalStorage","storedLocations","toConsumableArray","filter","localStorage","setItem","JSON","stringify","split","find","val","parse","getItem","getRandomId","prevState","createStorage","fetchData","currentWeather","_ref3","forecastday","undefined","forecastData","_this$state","Layout_Navbar","components_SearchForm","components_Weather","components_WeatherDetails","random","toString","substring","routing","HashRouter","Switch","Route","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e6622df1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport M from 'materialize-css';\r\n\r\nexport class SearchForm extends Component {\r\n    static initialState = () => ({\r\n        country: \"\",\r\n    })\r\n    state = SearchForm.initialState();\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        }, (async () => {\r\n            if (this.state.country < 3) return;\r\n            let options = { data: {} };\r\n            let node = document.querySelector(\".autocomplete\");\r\n            const data = await this.fetchSuggestions(`https://api.apixu.com/v1/search.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${this.state.country}`);\r\n            for (let key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    const element = data[key];\r\n                    options.data[element.name] = null;\r\n                }\r\n            }\r\n            M.Autocomplete.init(node, options);\r\n        }));\r\n\r\n    }\r\n\r\n    // getSuggestions = async () => {\r\n\r\n    //     return await this.fetchSuggestions(`}`);\r\n    // }\r\n\r\n    fetchSuggestions = async (url) => {\r\n        try {\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n            return json;\r\n        } catch (err) {\r\n            console.log(err);\r\n            return { err: \"error\" };\r\n        }\r\n    }\r\n\r\n    validateInput = (input) => {\r\n        // check for numbers, symbols etc\r\n        input = this.state.country.trim().toLowerCase();\r\n        input = input.replace(/å|ä/g, \"a\");\r\n        input = input.replace(/ö/g, \"o\");\r\n        return input;\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let searchName = this.validateInput(this.state.country);\r\n        this.props.searchForWeatherByName(searchName);\r\n        this.setState(SearchForm.initialState());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"row\" autoComplete=\"off\">\r\n                <div className=\"col s12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"input-field col s12 m5 l5 offset-m3 offset-l3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"country\"\r\n                                value={this.state.country}\r\n                                onChange={this.handleChange}\r\n                                className=\"searchInput autocomplete\" />\r\n                            <label htmlFor=\"country\">Location name</label>\r\n                        </div>\r\n                        <div className=\"input-field col s2 m2 l2\">\r\n                            <button type=\"submit\" onClick={this.handleSubmit}\r\n                                className=\"btn waves-effect waves-light btn-search\">\r\n                                Search\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\n\r\nexport default function WeatherCard({ name, country, icon, text, updated, tempC, addToFav }) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 currentweather\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\">\r\n                        <img src={icon} alt=\"weather\" />\r\n                        <p>{text}</p>\r\n                        <p><i className=\"fas fa-temperature-low\"></i> {tempC} °C</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 center-align\" style={{ position: \"relative\" }}>\r\n                        <span>{name}, {country} </span>\r\n                        <br />\r\n                        <small>Last updated: {updated}</small>\r\n                        <br /><br />\r\n                        <span className=\"btn-small btn-fav\" onClick={() => addToFav(name)}>\r\n                            <i className=\"material-icons right color-yellow\" title=\"Add to favourites\">favorite</i>\r\n                            Add to favorites\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function LoadingBar() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s12 l7 offset-l5\">\r\n                <div className=\"progress\">\r\n                    <div className=\"indeterminate\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport WeatherCard from './WeatherCard';\r\nimport LoadingBar from './Layout/LoadingBar';\r\n\r\nexport class Weather extends Component {\r\n\r\n    static initialState = () => ({\r\n        weatherData: []\r\n    });\r\n    state = Weather.initialState();\r\n\r\n    addToFav = (name) => {\r\n        this.props.addToLocalStorage(name);\r\n    }\r\n\r\n    // Loads the data and generate the card showing details\r\n    loadWeatherData = () => {\r\n        try {\r\n            if (this.state.weatherData.length === 0) {\r\n                return (\r\n                    <LoadingBar />\r\n                )\r\n            } else {\r\n                const { name, country } = this.state.weatherData.location;\r\n                const { last_updated, temp_c, temp_f, is_day } = this.state.weatherData.current;\r\n                const { text, icon } = this.state.weatherData.current.condition;\r\n                return (\r\n                    <WeatherCard\r\n                        name={name}\r\n                        country={country}\r\n                        updated={last_updated}\r\n                        tempC={temp_c}\r\n                        tempF={temp_f}\r\n                        icon={icon}\r\n                        text={text}\r\n                        details={this.showDetails}\r\n                        addToFav={this.addToFav}\r\n                        isday={is_day}\r\n                    />\r\n                )\r\n            }\r\n        } catch (err) {\r\n            return (\r\n                <p>Ops! Couldn't fetch weather data :(</p>\r\n            )\r\n        }\r\n    }\r\n    // Fetch current longitude / latitude using HTML5 geolocation\r\n    getLocation = (cb) => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(cb);\r\n        } else {\r\n            cb(null);\r\n        }\r\n    }\r\n    // Update the card after search is invoked from App.js\r\n    componentDidUpdate(prevprops) {\r\n        if (this.props.weatherData !== prevprops.weatherData) {\r\n            this.setState({\r\n                weatherData: this.props.weatherData\r\n            });\r\n        }\r\n    }\r\n\r\n    // Fetching the weather data from current position (lat/lon) on mounting.\r\n    async componentDidMount() {\r\n        try {\r\n            this.getLocation(async (position) => {\r\n                if (position === null) return;\r\n                const { longitude, latitude } = position.coords;\r\n                const res =\r\n                    await fetch(`https://api.apixu.com/v1/current.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${latitude},${longitude}`);\r\n                const json = await res.json();\r\n                this.setState({ weatherData: json });\r\n                const { name } = this.state.weatherData.location;\r\n                this.props.search(name);\r\n            });\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12\">\r\n                    {this.loadWeatherData()}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Weather\r\n","import React, { Component } from 'react'\r\nimport M from 'materialize-css'\r\n\r\nexport class Navbar extends Component {\r\n\r\n    favoriteList = () => {\r\n        return this.props.favoriteLocations.length ? (\r\n            this.props.favoriteLocations.map(location => {\r\n                const { name, id } = location;\r\n                return (\r\n                    <li key={id} className=\"center-align\">\r\n                        <i style={icon} className=\"tiny right material-icons red-text text-darken-2\" onClick={() => this.props.remove(id)}>remove_circle</i>\r\n                        <span style={nameSpan} onClick={() => this.props.search(name)}>{name}</span>\r\n                    </li>\r\n                )\r\n            })\r\n        ) : (<li>No favorites</li>);\r\n    }\r\n\r\n    componentDidMount() {\r\n        M.AutoInit();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav style={{ background: \"#035A96\" }}>\r\n                    <div className=\"nav-wrapper\">\r\n                        <a className=\"brand-logo\" href=\".\" style={{ marginLeft: \"10px\" }}> Forecast</a>\r\n                        <a href=\"#!\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                        <ul className=\"right hide-on-med-and-down\">\r\n                            <li><a className=\"dropdown-trigger\" href=\"#!\" data-target=\"dropdown1\">Saved locations<i className=\"material-icons right\">arrow_drop_down</i></a></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n                <ul id=\"dropdown1\" className=\"dropdown-content\">\r\n                    {this.favoriteList()}\r\n                </ul>\r\n\r\n                <div>\r\n                    <ul className=\"sidenav\" id=\"mobile-demo\">\r\n                        <li><a className=\"dropdown-trigger\" href=\"#!\" data-target=\"dropdown2\">Saved locations<i className=\"material-icons right\">arrow_drop_down</i></a></li>\r\n                    </ul>\r\n                    <ul id=\"dropdown2\" className=\"dropdown-content\">\r\n                        {this.favoriteList()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst icon = {\r\n    fontSize: \"14px\",\r\n    marginRight: \"14px\"\r\n}\r\nconst nameSpan = {\r\n    padding: \"19px 0 19px 10px\",\r\n    display: \"inline-flex\",\r\n    fontSize: \"13px\"\r\n}\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nexport default function WeatherDetailsItem({ date, mintemp, maxtemp, description, icon, maxwind, epoch, avgtemp }) {\r\n\r\n    // using formula m/s = 0.277778 * wind(km/h). Rounds to one decimal\r\n    const convertToMs = (wind) => {\r\n        const num = 0.277778;\r\n        return Math.round((wind * num)) / 10;\r\n    }\r\n\r\n    const getDay = (epoch) => {\r\n        let d = new Date(0);\r\n        d.setUTCSeconds(epoch);\r\n        let day = d.getDay();\r\n        switch (day) {\r\n            case 0: return \"Sunday\";\r\n            case 1: return \"Monday\";\r\n            case 2: return \"Tuesday\";\r\n            case 3: return \"Wednesday\";\r\n            case 4: return \"Thursday\";\r\n            case 5: return \"Friday\";\r\n            case 6: return \"Saturday\";\r\n            default: return \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"col s12 m2 l2\">\r\n            <div className=\"card\">\r\n                <div className=\"card-content white-text center-align\" style={weatherCard}>\r\n                    <div className=\"row\" style={{ margin: \"15px\" }}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12\" style={{ padding: \"0\" }}>\r\n                                <span>{getDay(epoch)}</span>\r\n                                <br />\r\n                                <span>{date}</span>\r\n                                <br></br>\r\n                                <img src={icon} alt=\"weather-icon\" />\r\n                                <br /><br />\r\n                                <span><i className=\"fas fa-temperature-low\"></i>  {avgtemp}°C</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12\">\r\n                                <small><i className=\"fas fa-temperature-low\"></i> min {mintemp}°C</small>\r\n                                <br/>\r\n                                <small><i className=\"fas fa-temperature-low\"></i> max {maxtemp}°C</small>\r\n                                <br />\r\n                                <small><i className=\"fas fa-wind\"></i> {convertToMs(maxwind)} m/s</small>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst weatherCard = {\r\n    minHeight: \"290px\",\r\n    background: \"#035A96\",\r\n    padding: \"5px 5px\",\r\n}","import React, { Component } from 'react'\r\nimport WeatherDetailsItem from './WeatherDetailsItem'\r\nimport Loadingbar from './Layout/LoadingBar';\r\n\r\nexport class WeatherDetails extends Component {\r\n\r\n    forecastList = () => {\r\n        return this.props.forecast.length ?\r\n            (\r\n                this.props.forecast.map(forecast => {\r\n                    const { date, date_epoch } = forecast;\r\n                    const { maxtemp_c, mintemp_c, maxwind_kph, avgtemp_c } = forecast.day;\r\n                    const { text, icon } = forecast.day.condition;\r\n                    return (\r\n                        <WeatherDetailsItem key={date}\r\n                            date={date}\r\n                            maxtemp={maxtemp_c}\r\n                            mintemp={mintemp_c}\r\n                            maxwind={maxwind_kph}\r\n                            description={text}\r\n                            icon={icon}\r\n                            epoch={date_epoch}\r\n                            avgtemp={avgtemp_c}\r\n                        />\r\n                    )\r\n                })\r\n            ) : (<Loadingbar />);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col s12 flex-box\">\r\n                    {this.forecastList()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WeatherDetails\r\n","import React, { Component } from 'react';\nimport SearchForm from './components/SearchForm';\nimport Weather from './components/Weather';\nimport Navbar from './components/Layout/Navbar';\nimport WeatherDetails from './components/WeatherDetails';\n\nclass App extends Component {\n\n  static initialState = () => ({\n    weatherData: [],\n    storedLocations: [],\n    forecastData: [],\n  });\n  state = App.initialState();\n\n  // Fetches the local storage and sets the stored objects to states storedLocations\n  componentDidMount() {\n    const data = JSON.parse(localStorage.getItem(\"locations\"));\n    if (data !== null) {\n      this.setState({\n        storedLocations: data\n      });\n    }\n  }\n  // Removes the saved ID from localstorage and updates state\n  removeFromLocalStorage = (id) => {\n    this.setState({\n      storedLocations: [...this.state.storedLocations.filter(location => location.id !== id)]\n    }, () => {\n      localStorage.setItem(\"locations\", JSON.stringify(this.state.storedLocations));\n    });\n  }\n  // Check if storage exists, appends item. Else creates it as new.\n  addToLocalStorage = (name) => {\n    name = name.split(',')[0];\n    const exists = this.state.storedLocations.find((val) => val.name === name);\n    if (exists) return;\n    let data = JSON.parse(localStorage.getItem(\"locations\"));\n    if (data !== null) {\n      const location = {\n        name: name,\n        id: getRandomId()\n      }\n      this.setState(prevState => ({\n        storedLocations: [...this.state.storedLocations, location]\n      }), () => {\n        localStorage.setItem(\"locations\", JSON.stringify(this.state.storedLocations));\n      });\n    } else {\n      this.createStorage(name);\n    }\n  }\n\n  // Will be called if localstorage isn't created when component mounts\n  createStorage = (name) => {\n    const location = {\n      name: name,\n      id: getRandomId()\n    }\n    this.setState(prevState => ({\n      storedLocations: [...prevState.storedLocations, location]\n    }));\n    localStorage.setItem(\"locations\", JSON.stringify(location));\n  }\n\n  // general fetch method\n  fetchData = async (url) => {\n    try {\n      const res = await fetch(url);\n      const json = await res.json();\n      return json;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // search for weather by name, will fetch 5 day forecast and current data\n  searchForWeatherByName = async (name) => {\n    if (name === undefined) return;\n    try {\n      {\n        const currentWeather =\n          await this.fetchData(`https://api.apixu.com/v1/current.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${name}`);\n        const { forecast } =\n          await this.fetchData(`https://api.apixu.com/v1/forecast.json?key=${process.env.REACT_APP_WEATHER_API_KEY}&q=${name}&days=5`);\n        const { forecastday } = forecast;\n        this.setState({\n          weatherData: currentWeather,\n          forecastData: forecastday\n        });\n      }\n    } catch (err) {\n      // TODO: Error handeling later\n    }\n\n  };\n\n  render() {\n    const { weatherData, storedLocations } = this.state;\n    return (\n      <div>\n        <Navbar favoriteLocations={storedLocations} remove={this.removeFromLocalStorage} search={this.searchForWeatherByName} />\n        <br /><br />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col s12 m12 l12\">\n              <SearchForm searchForWeatherByName={this.searchForWeatherByName} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              <Weather addToLocalStorage={this.addToLocalStorage} weatherData={weatherData} search={this.searchForWeatherByName} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              <WeatherDetails forecast={this.state.forecastData} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction getRandomId() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"materialize-css\";\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './index.css';\nimport App from './App';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\n\nconst routing = (\n    <HashRouter>\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n            </Switch>\n        </div>\n    </HashRouter>\n)\n\nReactDOM.render(routing, document.getElementById('root'))\n"],"sourceRoot":""}